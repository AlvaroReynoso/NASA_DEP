{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_NASA_mars_info_JSON",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "soles"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {675} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as boolean), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {9} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short))),",
				"          {676} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {2} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {5} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short))),",
				"          {677} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as integer), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {2} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as boolean), {5} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as integer))),",
				"          {678} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {2} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {3} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {5} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {6} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {7} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {8} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {9} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short))),",
				"          {679} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {2} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {3} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {5} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {6} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {7} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {8} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {9} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short))),",
				"          {680} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as integer), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {5} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {6} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {7} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {8} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {9} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as integer))),",
				"          {681} as (AT as (av as double, ct as integer, mn as double, mx as double), First_UTC as timestamp, HWS as (av as double, ct as integer, mn as double, mx as double), Last_UTC as timestamp, Month_ordinal as short, Northern_season as string, PRE as (av as double, ct as integer, mn as double, mx as double), Season as string, Southern_season as string, WD as ({0} as (compass_degrees as double, compass_point as boolean, compass_right as double, compass_up as double, ct as short), {1} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {10} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {11} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {12} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {13} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {14} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {15} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {2} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {3} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {5} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {6} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {7} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {8} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), {9} as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short), most_common as (compass_degrees as double, compass_point as string, compass_right as double, compass_up as double, ct as short))),",
				"          sol_keys as short[],",
				"          validity_checks as ({674} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {675} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {676} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {677} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {678} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {679} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {680} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {681} as (AT as (sol_hours_with_data as short[], valid as boolean), HWS as (sol_hours_with_data as short[], valid as boolean), PRE as (sol_hours_with_data as short[], valid as boolean), WD as (sol_hours_with_data as short[], valid as boolean)), {682} as (AT as (sol_hours_with_data as boolean[], valid as boolean), HWS as (sol_hours_with_data as boolean[], valid as boolean), PRE as (sol_hours_with_data as boolean[], valid as boolean), WD as (sol_hours_with_data as boolean[], valid as boolean)), sol_hours_required as short, sols_checked as short[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"select1 derive(partitionBy('hash', 1)) ~> soles",
				"source1 select(mapColumn(",
				"          {675},",
				"          {676},",
				"          {677},",
				"          {678},",
				"          {679},",
				"          {680},",
				"          {681}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}